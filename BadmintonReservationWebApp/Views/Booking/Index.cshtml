@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-10">
        <h2 class="display-8">Booking List</h2>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" class="btn btn-primary" onclick="add();">
            Add
        </button>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr class="card-header">
                    <th class="card-title text-center">Code</th>
                    <th class="card-title text-center">Customer</th>
                    <th class="card-title text-center">Status</th>
                    <th class="card-title text-center">Type</th>                            
                    <th class="card-title text-center">Details</th>
                    <th class="card-title text-center">Promotion Amount</th>
                    <th class="card-title text-center">Payment Type</th>
                    <th class="card-title text-center">Last Updated Date</th>
                    <th class="card-title text-center"></th>
                </tr>
            </thead>
            <tbody class="tblList">
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="topUpModal" tabindex="-1" aria-labelledby="topUpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="topUpModalLabel">Topup Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="topUpModalContent"></div>
                </div>
                <div class="modal-footer">
                    <button id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            loadData();          
        });

        function loadData() {
            $.ajax({
                url: '@Url.Action("GetAll", "Booking")',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    const statusMap = {
                        1: 'Pending',
                        2: 'Successful',
                        3: 'Failed',
                        4: 'Cancelled'
                    };
                    const paymentTypeMap = {
                        1: 'Offline',
                        2: 'Online',
                    }
                    var html = '';
                    // console.log(result);
                    $.each(result, function (key, item) {
                        console.log(item);
                        html += '<tr>';
                        html += '<td>' + item.id + '</td>';
                        html += '<td>' + item.customer.fullName + '</td>';
                        html += '<td>' + statusMap[item.status] + '</td>';
                        html += '<td>' + item.bookingType.name + '</td>';                        
                        html += '<td>' + generateBookingDetailsHTML(item.bookingDetails) + '</td>';
                        html += '<td>' + item.promotionAmount + '</td>';
                        html += '<td>' + paymentTypeMap[item.paymentType] + '</td>';
                        html += '<td>' + formatDateTime(item.updatedDate) + '</td>';
                        html += '<td><button type="button" class="btn btn-outline-primary" onclick ="return edit(\'' + item.id + '\')">Edit</button> | <button type="button" class="btn btn-outline-danger" onclick ="return deleteItem(\'' + item.id + '\')">Delete</a></td>';
                        html += '</tr>';
                    });
                    $('.tblList').html(html);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                    alert(`Something went wrong!`);
                }
            });
        }
       

        function add() {
            $("#topUpModalContent").html("");
            $("#topUpModalLabel").html("Add New");

            $.ajax({
                url: '@Url.Action("Add", "Booking")',
                type: "GET",
                success: function (result) {
                    $("#topUpModalContent").html(result);
                    $('#topUpModal').modal('show');

                    $("#btSave").off("click").on("click", function () {
                        create();
                    });
                },
                error: function (message) {
                    alert(message);
                }
            });
        }

        function edit(id) {
            $("#topUpModalContent").html("");
            $("#topUpModalLabel").html(`Edit booking [${id}]`);
            $.ajax({
                url: '@Url.Action("Edit", "Booking")' + '/' + id,
                type: "GET",
                success: function (result) {
                    $("#topUpModalContent").html(result);
                    $('#topUpModal').modal('show');

                    $("#btSave").off("click").on("click", function () {
                        update(id);
                    });
                },
                error: function (message) {
                    alert(message);
                }
            });
        }

        function deleteItem(id) {
            var result = confirm(`Are you sure to delete booking [${id}]?`);
            if (result) {

                $.ajax({
                    url: '@Url.Action("Delete", "Booking")' + '/' + id,
                    type: 'DELETE',
                    contentType: 'application/json;charset=utf-8',
                    dataType: "json",
                    success: function (result) {
                        loadData();
                        alert(`Deleted booking [${id}] sucessfully!`);
                    },
                    error: function (xhr, error) {
                        console.log(xhr);
                        alert(`Something went wrong!`);
                    }
                });
            }
        }

        function generateBookingDetailsHTML(bookingDetails) {
            var html = '';

            bookingDetails.forEach(function (bookingDetail) {
                var bookDate = new Date(bookingDetail.bookDate).toLocaleDateString();
                var timeFrom = new Date(bookingDetail.timeFrom).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                var timeTo = new Date(bookingDetail.timeTo).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                var courtName = bookingDetail.frame.court.name;

                var rowHtml = '<p>';
                rowHtml += bookDate + ' | ' + timeFrom + ' - ' + timeTo + ' | ' + courtName;
                rowHtml += '</p>';
                html += rowHtml;
            });

            return html;
        }

        function formatDateTime(dateTimeString, format) {
            var dateTime = new Date(dateTimeString);
            var formattedDateTime = dateTime.toLocaleString(undefined, { timeZone: 'UTC', ...format });

            return formattedDateTime;
        }

        function convertToISODateTime(dateTimeString) {
            // Create a new Date object from the date-time string
            const date = new Date(dateTimeString);

            // Get the components of the date and time
            const year = date.getFullYear();
            const month = (date.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-indexed
            const day = date.getDate().toString().padStart(2, '0');
            const hours = date.getHours().toString().padStart(2, '0');
            const minutes = date.getMinutes().toString().padStart(2, '0');
            const seconds = date.getSeconds().toString().padStart(2, '0');

            // Construct the ISO 8601 date-time string
            const isoDateTime = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;

            return isoDateTime;
        }


        function create() {
            var data = {
                bookingTypeId: $("#BookingTypeId").val(),
                status: $("#Status").val(),
                promotionAmount: $("#PromotionAmount").val(),
                paymentType: $("#PaymentType").val(),
                customerId: $("#CustomerId").val(),
                bookingDateFrom: convertToISODateTime($("#BookingDateFrom").val()),
                bookingDateTo: convertToISODateTime($("#BookingDateTo").val())
            };

            console.log(data);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create", "Booking")',
                contentType: 'application/json;charset=utf-8',
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    if (result.status >= 1) {
                        $('#topUpModal').modal('hide');
                        loadData();
                    }
                    alert("Created new booking sucessfully!");
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert(`Something went wrong!`);
                }
            });
        }

        function update(id) {
            var data = {                
                bookingTypeId: $("#BookingTypeId").val(),
                status: $("#Status").val(),
                paymentStatus: null,
                promotionAmount: $("#PromotionAmount").val(),
                paymentType: $("#PaymentType").val(),
                customerId: $("#CustomerId").val(),
                bookingDateFrom: convertToISODateTime($("#BookingDateFrom").val()),
                bookingDateTo: convertToISODateTime($("#BookingDateTo").val())
            };

            console.log(data);

            $.ajax({
                type: 'PATCH',
                url: '@Url.Action("Update", "Booking")' + '/' + id,
                contentType: 'application/json;charset=utf-8',
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    if (result.status >= 1) {
                        $('#topUpModal').modal('hide');
                        loadData();
                    }
                    alert(`Updated booking id:${id} sucessfully!`);
                },
                error: function (xhr, error) {
                    console.log(xhr);
                    alert(`Something went wrong!`);
                }
            });
        }
    

    </script>
}
