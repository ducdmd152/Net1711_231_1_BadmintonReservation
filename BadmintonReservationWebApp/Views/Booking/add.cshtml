@model BadmintonReservationWebApp.Models.AddBookingModel

<div class="form-group row">
    <div class="col-md-6">
        <label for="BookingTypeId">Booking Type</label>
        @Html.DropDownListFor(model => model.BookingTypeId, new SelectList(new[] {
        new { Value = 1, Text = "Normally" },
        new { Value = 2, Text = "Monthly" },
        new { Value = 5, Text = "By buyed hours" }
        }, "Value", "Text"), new { @class = "form-control" })
    </div>
    <div class="col-md-6">
        <label for="Status">Status</label>
        @Html.DropDownListFor(model => model.Status, new SelectList(new[] {
        new { Value = 1, Text = "Pending" },
        new { Value = 2, Text = "Successful" },
        new { Value = 3, Text = "Failed" },
        new { Value = 4, Text = "Cancelled" }
        }, "Value", "Text"), new { @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <label for="PromotionAmount">Promotion Amount</label>
        @Html.EditorFor(model => model.PromotionAmount, new
            {
                htmlAttributes = new { @class = "form-control", @min = "0", @step = "1000" }
            })
    </div>
    <div class="col-md-6">
        <label for="PaymentType">Payment Type</label>
        @Html.DropDownListFor(model => model.PaymentType, new SelectList(new[] {
        new { Value = 1, Text = "Offline" },
        new { Value = 2, Text = "Online" },
        }, "Value", "Text"), new { @class = "form-control" })
        @Html.Hidden("CustomerId", Model.CustomerId)
    </div>
</div>

<div class="form-group row">
    <div class="col-md-6">
        <label for="PaymentStatus">Payment Status</label>
        @Html.DropDownListFor(model => model.PaymentStatus, new SelectList(new[] {
        new { Value = 1, Text = "Not yet" },
        new { Value = 2, Text = "Paid" },
        new { Value = 3, Text = "Failed" },
        new { Value = 4, Text = "Refund" },
        }, "Value", "Text"), new { @class = "form-control" })
        @Html.Hidden("CustomerId", Model.CustomerId)
    </div>
</div>

<div id="bookingDetailsContainer">
    <h4>Booking Details</h4>
</div>
<button type="button" class="btn btn-secondary mt-2" onclick="addBookingDetail()">Add More Booking Detail</button>

@section scripts {
    <script type="text/javascript">
        var bookingDetailIndex = 1;

        function addBookingDetail() {
            var newDetail = `
                                <div class="booking-detail" data-index="${bookingDetailIndex}">
                                    <div class="form-group row">
                                        <div class="col-md-6">
                                            <label for="BookingDetails_${bookingDetailIndex}__BookDate">Book Date</label>
                                            <input type="date" class="form-control" name="BookingDetails[${bookingDetailIndex}].BookDate" onchange="loadFrames(this)" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-6">
                                            <label for="BookingDetails_${bookingDetailIndex}__FrameId">Frame</label>
                                            <select class="form-control frame-dropdown" name="BookingDetails[${bookingDetailIndex}].FrameId" data_index="${bookingDetailIndex}">
                                                <!-- Frames will be populated by JavaScript -->
                                            </select>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="BookingDetails_${bookingDetailIndex}__Price">Price</label>
                                            <input type="number" class="form-control" name="BookingDetails[${bookingDetailIndex}].Price" step="1000" min="0" />
                                        </div>
                                    </div>
                                </div>`;
            $('#bookingDetailsContainer').append(newDetail);
            bookingDetailIndex++;
        }

        function loadFrames(input) {
            var bookingDate = $(input).val();
            var index = $(input).closest('.booking-detail').attr('data-index');
            var frameDropdown = $('select[name="BookingDetails[' + index + '].FrameId"]');

            $.ajax({
                url: `/api/Frame/available?bookingDate=${bookingDate}`,
                type: 'GET',
                success: function (frames) {
                    frameDropdown.empty();
                    $.each(frames, function (i, frame) {
                        frameDropdown.append($('<option>', {
                            value: frame.id,
                            text: `${frame.court.name} - ${frame.timeFrom} - ${frame.timeTo}`
                        }));
                    });
                },
                error: function (error) {
                    console.error('Error fetching frames:', error);
                }
            });
        }

        function create() {
            var bookingData = {
                BookingTypeId: $('#BookingTypeId').val(),
                Status: $('#Status').val(),
                PromotionAmount: $('#PromotionAmount').val(),
                PaymentType: $('#PaymentType').val(),
                CustomerId: $('#CustomerId').val(),
                BookingDetails: []
            };

            $('.booking-detail').each(function (index, element) {
                var detail = {
                    BookDate: $(element).find('[name^="BookingDetails"]').filter('[name$="BookDate"]').val(),
                    FrameId: $(element).find('[name^="BookingDetails"]').filter('[name$="FrameId"]').val(),
                    Price: $(element).find('[name^="BookingDetails"]').filter('[name$="Price"]').val()
                };
                bookingData.BookingDetails.push(detail);
            });

            $.ajax({
                url: '/Booking/CreateWithDetails',
                type: 'POST',
                data: JSON.stringify(bookingData),
                contentType: 'application/json',
                success: function (response) {
                    alert('Booking created successfully!');
                },
                error: function (response) {
                    alert('Error creating booking: ' + response.responseText);
                }
            });
        }
    </script>
}
