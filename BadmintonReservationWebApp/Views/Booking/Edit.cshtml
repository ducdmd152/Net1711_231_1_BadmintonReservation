@model BadmintonReservationData.Booking
@{
    var bookingDetails = Model.BookingDetails.ToList();
}
<div class="form-group row">
    <div class="col-md-6">
        <label for="BookingTypeId">Booking Type</label>
        <input class="form-control" type="text" readonly="readonly" value="@($"{@Model.BookingType.Name}")">
        @Html.HiddenFor(model => model.BookingTypeId)
    </div>
    <div class="col-md-6">
        <label for="Status">Status</label>
        @Html.DropDownListFor(model => model.Status, new SelectList(new[] {
        new { Value = 1, Text = "Pending" },
        new { Value = 2, Text = "Successful" },
        new { Value = 3, Text = "Failed" },
        new { Value = 4, Text = "Cancelled" }
        }, "Value", "Text"), new { @class = "form-control", id = "Status" })
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <label for="Customer">Customer</label>
        <input class="form-control" type="text" readonly="readonly" value="@($"{@Model.Customer.FullName}")">
        @Html.HiddenFor(model => model.CustomerId)
    </div>
    
    <div class="col-md-6">
        <label for="PromotionAmount">Promotion Amount</label>
        @Html.EditorFor(model => model.PromotionAmount, new
            {
                htmlAttributes = new { @class = "form-control", @min = "0", @step = "1000", id = "PromotionAmount" }
            })
    </div>
    
</div>

<div class="form-group row">
    <div class="col-md-6">
        <label for="PaymentType">Payment Type</label>
        @Html.DropDownListFor(model => model.PaymentType, new SelectList(new[] {
        new { Value = 1, Text = "Offline" },
        new { Value = 2, Text = "Online" },
        }, "Value", "Text"), new { @class = "form-control", id = "PaymentType" })        
    </div>
    <div class="col-md-6">
        <label for="PaymentStatus">Payment Status</label>
        @Html.DropDownListFor(model => model.PaymentStatus, new SelectList(new[] {
        new { Value = 1, Text = "Not yet" },
        new { Value = 2, Text = "Paid" },
        new { Value = 3, Text = "Failed" },
        new { Value = 4, Text = "Refund" },
        }, "Value", "Text"), new { @class = "form-control", id = "PaymentStatus" })
    </div>
</div>

<div id="bookingDetailsContainer">
    <h4>Booking Details</h4>
    @for (var i = 0; i < bookingDetails.Count; i++)
    {
        <div class="booking-detail" data-index="@i">
            @Html.HiddenFor(model => @bookingDetails[i].Id, new { id = $"BookingDetails_{i}__Id" })
            <div class="form-group row">
                <div class="col-md-6">
                    <label>Book Date</label>
                    @Html.EditorFor(model => model.BookingDetails.ElementAt(i).BookDate, new { htmlAttributes = new { @class = "form-control", id = $"BookingDetails_{i}__BookDate", @readonly = "readonly" } })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-6">
                    <label>Frame</label>
                    <input class="form-control" type="text" readonly="readonly" value="@($"{@Model.BookingDetails.ElementAt(i).Frame}")">
                    @Html.HiddenFor(model =>bookingDetails[i].FrameId, new { id = $"BookingDetails_{i}__FrameId" })
                    @Html.HiddenFor(model =>bookingDetails[i].TimeFrom, new { id = $"BookingDetails_{i}__TimeFrom" })
                    @Html.HiddenFor(model =>bookingDetails[i].TimeTo, new { id = $"BookingDetails_{i}__TimeTo" })
                </div>
                <div class="col-md-6">
                    <label>Price</label>
                    @Html.EditorFor(model => model.BookingDetails.ElementAt(i).Price, new { htmlAttributes = new { @class = "form-control", @step = "1000", @min = "0", id = $"BookingDetails_{i}__Price" } })
                </div>
            </div>
        </div>
    }
</div>
