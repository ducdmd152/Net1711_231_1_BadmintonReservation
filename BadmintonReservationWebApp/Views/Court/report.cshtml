@model CourtReport
@{
    ViewData["Title"] = "Court Report #" + Model.Id;
    var courtStatus = new Dictionary<int, string>
    {
        { 1, "Active" },
        { 2, "Inactive" },
        { 3, "Delete" }
    };
    var frameStatus = new Dictionary<int, string>
    {
        { 1, "Active" },
        { 2, "Inactive" },
        { 3, "Delete" },

    };

    var surfaceType = new Dictionary<int, string>
    {
        { 1, "Wooden" },
        { 2, "Synthetic" },
        { 3, "Rubberized" },
        { 4, "Concrete" },
        { 5, "Vinyl" },
    };

    var courtType = new Dictionary<int, string>
    {
        { 1, "Single" },
        { 2, "Double" },
        { 3, "Both" }
    };

    var statusBadgeMap = new Dictionary<int, string>
    {
        { 1, "bg-warning text-dark" },   // Pending
        { 2, "bg-success" },             // Successful
        { 3, "bg-danger" },              // Failed
        { 4, "bg-secondary" }            // Cancelled
    };

    string ConvertIntTime(int hhmm)
    {
        string timeString = hhmm.ToString().PadLeft(4, '0');
        string hours = timeString.Substring(0, 2);
        string minutes = timeString.Substring(2, 2);
        return $"{hours}:{minutes}";
    }

    string FormatDate(DateTime date)
    {
        return date.ToString("dddd, dd-MM-yyyy");
    }

        string FormatDateTime(DateTime date)
        {
            return date.ToString("dddd, dd-MM-yyyy HH:mm");
        }
}
<style>
    body {
        font-family: Arial, sans-serif;
    }

    .header-text {
        color: #0188A6;
        font-weight: 600;
    }
    .header-line {
        background-color: #00a6BD4E;
        padding: 20px;
        color: white;
        font-size: 24px;
    }

    .header-text {
        display: flex;
        align-items: center;
    }

        .header-text .badge {
            margin-left: 10px;
        }

    .details, .details dt, .details dd {
        font-size: 18px;
    }

        .details dt {
            font-weight: bold;
        }

        .details dd {
            margin: 0 0 10px;
        }

    .table {
        margin-top: 20px;
    }

        .table th, .table td {
            text-align: center;
            vertical-align: middle;
        }
</style>
<div class="container">
    <h3 class="header-text">Court Report #@Model.Id <span class="badge @statusBadgeMap[@Model.Status]" style="font-size: 14px;">@courtStatus[@Model.Status]</span> </h3>
    <div class="header-line">
    </div>

    <dl class="row details mt-3">
        <div class="col-md-6 row">
            <dt class="col-sm-4">Court Id:</dt>
            <dd class="col-sm-8">@Model.Id</dd>

            <dt class="col-sm-4">Court Status:</dt>
            <dd class="col-sm-8">@courtStatus[@Model.Status]</dd>


            <dt class="col-sm-4">Total Booking:</dt>
            <dd class="col-sm-8">@Model.TotalBooking</dd>

            <dt class="col-sm-4">Court Type:</dt>
            <dd class="col-sm-8">@courtType[@Model.CourtType]</dd>

            <dt class="col-sm-4">Court Opening:</dt>
            <dd class="col-sm-8">@ConvertIntTime(Model.OpeningHours)</dd>

            <dt class="col-sm-4">Court Amentities:</dt>
            <dd class="col-sm-8">@Model.Amentities</dd>

            <dt class="col-sm-4">Court Created:</dt>
            <dd class="col-sm-8">@FormatDateTime(@Model.CreatedDate)</dd>
        </div>
        <div class="col-md-6 row">
            <dt class="col-sm-4">Court Name:</dt>
            <dd class="col-sm-8">@Model.Name</dd>

            <dt class="col-sm-4">Court Surface:</dt>
            <dd class="col-sm-8">@surfaceType[@Model.SurfaceType]</dd>

            <dt class="col-sm-4">Court Capacity:</dt>
            <dd class="col-sm-8">@Model.Capacity</dd>

            <dt class="col-sm-4">Court Close hours:</dt>
            <dd class="col-sm-8">@ConvertIntTime(Model.CloseHours)</dd>

            <dt class="col-sm-4">Last Updated At:</dt>
            <dd class="col-sm-8">@FormatDateTime(@Model.UpdatedDate)</dd>
        </div>
    </dl>

    <table class="table mt-3">
        <thead>
            <tr>
                <th class="card-title text-center">ID</th>
                <th class="card-title text-center">Time From</th>
                <th class="card-title text-center">Time To</th>
                <th class="card-title text-center">Status</th>
                <th class="card-title text-center">Price</th>
                <th class="card-title text-center">Last Updated Date</th>
                <th class="card-title text-center"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var f in Model.Frames.Select((item, index) => (item, index)).ToList())
            {
                <tr>
                    <th scope="row">@f.item.Id</th>
                    <td>@ConvertIntTime(f.item.TimeFrom)</td>
                    <td>@ConvertIntTime(f.item.TimeTo)</td>
                    <td>@frameStatus[f.item.Status]</td>
                    <td>@f.item.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</td>
                    <td>@FormatDateTime(f.item.CreatedDate)</td>
                    <td>@FormatDateTime(f.item.UpdatedDate)</td>
                </tr>
            }
        </tbody>
    </table>
</div>