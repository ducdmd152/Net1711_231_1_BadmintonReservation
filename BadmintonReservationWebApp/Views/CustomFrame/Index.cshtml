@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-10">
        <h2 class="display-8">Frame List</h2>
    </div>
    <div class="col-md-2 text-end">
        <button type="button" class="btn btn-primary" onclick="add();">
            Add
        </button>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-bordered table-hover">
            <thead>
            <tr class="card-header">
                <th class="card-title text-center">ID</th>
                <th class="card-title text-center">Time From</th>
                <th class="card-title text-center">Time To</th>
                <th class="card-title text-center">Status</th>
                <th class="card-title text-center">Price</th>
                <th class="card-title text-center">Court Name</th>
                <th class="card-title text-center">Last Updated Date</th>
                <th class="card-title text-center"></th>
            </tr>
            </thead>
            <tbody class="tblList">
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="topUpModal" tabindex="-1" aria-labelledby="topUpModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="topUpModalLabel">Topup Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="topUpModalContent"></div>
                </div>
                <div class="modal-footer">
                    <button id="btSave" type="button" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            }
        </div>
    </div>
</div>
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            loadData();
        });

        function loadData() {
            $.ajax({
                url: '@Url.Action("GetAll", "CustomFrame")',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    const statusMap = {
                        1: 'Active',
                        2: 'InActive'
                    };
                    var html = '';
                    // console.log(result);
                    $.each(result, function (key, item) {
                        console.log(item);
                        html += '<tr>';
                        html += '<td>' + item.id + '</td>';
                        html += '<td>' + extractHourAndMinute(item.timeFrom) + '</td>';
                        html += '<td>' + extractHourAndMinute(item.timeTo) + '</td>';
                        html += '<td>' + statusMap[item.status] + '</td>';
                        html += '<td>' + formatPrice(item.price) + ' VNĐ' + '</td>';
                        html += '<td>' + item.court.name + '</td>';
                        html += '<td>' + formatDateTime(item.updatedDate) + '</td>';
                        html += '<td><button type="button" class="btn btn-outline-primary" onclick ="return edit(\'' + item.id + '\')">Edit</button> | <button type="button" class="btn btn-outline-danger" onclick ="return deleteItem(\'' + item.id + '\')">Delete</a></td>';
                        html += '</tr>';
                    });
                    $('.tblList').html(html);
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                    alert(`Something went wrong!`);
                }
            });
        }

        function extractHourAndMinute(datetimeStr) {
            let date = new Date(datetimeStr);
            let hours = date.getHours().toString().padStart(2, '0');
            let minutes = date.getMinutes().toString().padStart(2, '0');
            return `${hours}:${minutes}`;
        }

        function formatDateTime(dateTimeString, format) {
            var dateTime = new Date(dateTimeString);
            var formattedDateTime = dateTime.toLocaleString(undefined, { timeZone: 'UTC', ...format });
            return formattedDateTime;
        }

        function formatPrice(price) {
            return price.toLocaleString('de-DE');
        }



        function add() {
            $("#topUpModalContent").html("");
            $("#topUpModalLabel").html("Add New");

            $.ajax({
                url: '@Url.Action("Add", "CustomFrame")',
                type: "GET",
                success: function (result) {
                    $("#topUpModalContent").html(result);
                    $('#topUpModal').modal('show');

                    $("#btSave").off("click").on("click", function () {
                        create();
                    });
                },
                error: function (message) {
                    alert(message);
                }
            });
        }

    function create() {
        // Manually trigger validation
        if ($('#frm').valid()) {
            // Get values from form
            var timeFrom = $("#TimeFrom").val();
            var timeTo = $("#TimeTo").val();

            // Convert time strings to Date objects
            var timeFromDate = new Date("2000-01-01T" + timeFrom);
            var timeToDate = new Date("2000-01-01T" + timeTo);

            // Check if TimeFrom is less than TimeTo
            if (timeFromDate < timeToDate) {
                // Ensure the times are formatted as "hh:mm:ss"
                var timeFromParts = timeFrom.split(':');
                var timeToParts = timeTo.split(':');

                var timeFromFormatted = timeFromParts[0].padStart(2, '0') + ':' + timeFromParts[1].padStart(2, '0') + ':00';
                var timeToFormatted = timeToParts[0].padStart(2, '0') + ':' + timeToParts[1].padStart(2, '0') + ':00';
                // Proceed with AJAX request
                var data = {
                    timeFrom: timeFromFormatted,
                    timeTo: timeToFormatted,
                    status: $("#Status").val(),
                    price: $("#Price").val(),
                    courtId: $("#CourtId").val(),
                };

                // AJAX request
                console.log(data);
                $.ajax({
                    type: 'POST',
                        url: '@Url.Action("Create", "CustomFrame")',
                    contentType: 'application/json;charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(data),
                    success: function (result) {
                        if (result.status >= 1) {
                            $('#topUpModal').modal('hide');
                            loadData();
                        }
                        alert("Created new frame successfully!");
                    },
                    error: function (xhr, error) {
                        console.log(xhr);
                        alert(`Something went wrong!`);
                    }
                });
            } else {
                // Show error message
                $("#TimeTo").siblings(".text-danger").text("Time To must be greater than Time From.");
            }
        }
    }

    function deleteItem(id) {
        var result = confirm(`Are you sure to delete frame ${id}?`);
        if (result) {
            $.ajax({
                    url: '@Url.Action("Delete", "CustomFrame")' + '/' + id,
                type: 'DELETE',
                contentType: 'application/json;charset=utf-8',
                dataType: "json",
                    success: function (result) {
                        loadData();
                        alert(`Deleted frame ${id} successfully!`);
                    },
                    error: function (xhr, error) {
                        console.log(xhr);
                        alert(`Something went wrong!`);
                    }
            });
        }
    }

    function edit(id) {
        $("#topUpModalContent").html("");
            $("#topUpModalLabel").html(`Edit booking [${id}]`);
            $.ajax({
                url: '@Url.Action("Edit", "Frame")' + '/' + id,
                type: "GET",
                success: function (result) {
                    $("#topUpModalContent").html(result);
                    $('#topUpModal').modal('show');

                    $("#btSave").off("click").on("click", function () {
                        update(id);
                    });
                },
                error: function (message) {
                    alert(message);
                }
        });
    }

    function update(id) {
        // Manually trigger validation
        if ($('#frm').valid()) {
            // Get values from form
            var timeFrom = $("#TimeFrom").val();
            var timeTo = $("#TimeTo").val();

            // Convert time strings to Date objects
            var timeFromDate = new Date("2000-01-01T" + timeFrom);
            var timeToDate = new Date("2000-01-01T" + timeTo);

            // Check if TimeFrom is less than TimeTo
            if (timeFromDate < timeToDate) {
                // Ensure the times are formatted as "hh:mm:ss"
                var timeFromParts = timeFrom.split(':');
                var timeToParts = timeTo.split(':');

                var timeFromFormatted = timeFromParts[0].padStart(2, '0') + ':' + timeFromParts[1].padStart(2, '0') + ':00';
                var timeToFormatted = timeToParts[0].padStart(2, '0') + ':' + timeToParts[1].padStart(2, '0') + ':00';
                // Proceed with AJAX request
                var data = {
                    id: id,
                    timeFrom: timeFromFormatted,
                    timeTo: timeToFormatted,
                    status: $("#Status").val(),
                    price: $("#Price").val(),
                    courtId: $("#CourtId").val(),
                };

                // AJAX request
                console.log(data);
                $.ajax({
                    type: 'PUT',
                    url: '@Url.Action("Update", "Frame")',
                    contentType: 'application/json;charset=utf-8',
                    dataType: "json",
                    data: JSON.stringify(data),
                    success: function (result) {
                        if (result.status >= 1) {
                            $('#topUpModal').modal('hide');
                            loadData();
                        }
                        alert(`Update frame ${id} successfully!`);
                    },
                    error: function (xhr, error) {
                        console.log(xhr);
                        alert(`Something went wrong!`);
                    }
                });
            } else {
                // Show error message
                $("#TimeTo").siblings(".text-danger").text("Time To must be greater than Time From.");
            }
        }
    }

    </script>
}