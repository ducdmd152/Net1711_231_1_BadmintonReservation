@model BadmintonReservationData.DTOs.CreateCustomFrameRequestDTO

<div class="form-group row">
    <div class="col-md-6">
        <label for="1">Specific Date</label>
        @Html.EditorFor(model => model.SpecificDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
        @Html.ValidationMessageFor(model => model.SpecificDate, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <label for="1">Price</label>
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-6">
        <label for="1">Status</label>
        @Html.DropDownListFor(model => model.Status, new SelectList(new[]
        {
            new { Value = 1, Text = "Active" },
            new { Value = 2, Text = "Inactive" },
        }, "Value", "Text"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <label for="1">Frame</label>
        <select id="CourtId" class="form-control"></select>
        @Html.ValidationMessageFor(model => model.FrameId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group row">
    <div class="col-md-6">
        <label for="1">Date In Week</label>
        <select id="DateInWeek" class="form-control"></select>
        @Html.ValidationMessageFor(model => model.FrameId, "", new { @class = "text-danger" })
    </div>
</div>
<script>
    $(document).ready(function() {
        getAllFrame();
        getAllData();
    });
    function getAllFrame() {
        $.ajax({
            url: '@Url.Action("GetAll", "Frame")',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    // Clear previous options
                    $('#CourtId').empty();
                    // Add each court as an option to the dropdown list

                    $.each(result, function(key, item) {

                        var text = extractHourAndMinute(item.timeFrom) + "-" + extractHourAndMinute(item.timeTo) + "-" 
                        + item.court.name;
                       

                        $('#CourtId').append($('<option>', {
                            value: item.id,
                            text: text,
                        }));
                    });
                },
                error: function (xhr, error) {
                    alert(xhr.statusText);
                    alert(`Something went wrong!`);
                }
        });
    }

    function getAllData() {
        $.ajax({
            url: '@Url.Action("GetAll", "DateType")',
            type: "GET",
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                // Clear previous options
                $('#DateInWeek').empty();
                // Add each court as an option to the dropdown list
                $.each(result, function (key, item) {
                    $('#DateInWeek').append($('<option>', {
                        value: item.id,
                        text: item.name
                    }));
                });
            },
            error: function (xhr, error) {
                alert(xhr.statusText);
                alert(`Something went wrong!`);
            }
        });
    }

    function extractHourAndMinute(datetimeStr) {
        let date = new Date(datetimeStr);
        let hours = date.getHours().toString().padStart(2, '0');
        let minutes = date.getMinutes().toString().padStart(2, '0');
        return `${hours}:${minutes}`;
    }


</script>
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}